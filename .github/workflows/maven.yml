name: Maven Build and Test


on:
  push:
    branches:
      - main
  workflow_dispatch:      

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [java]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4


#    - name: Run Super-Linter
#      uses: github/super-linter@v4
#      env: 
#        DEFAULT_BRANCH: master
#        VALIDATE_ALL_CODEBASE: true
#        GITHUB_TOKEN: ${{ secrets.VILAS_GITHUB_TOKEN }}

#sast tool 
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: java

#    - name: Perform CodeQL Analysis
#      uses: github/codeql-action/analyze@v2
      #with:
        # Optional. Specify a category to distinguish between multiple analyses
        # for the same tool and ref. If you don't use `category` in your workflow,
        # GitHub will generate a default category name for you
        #category: "my_category"
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      #uses: github/codeql-action/analyze@46a6823b81f2d7c67ddf123851eea88365bc8a67        
      uses: github/codeql-action/analyze@v2
      with:
        upload: False
        output: sarif-results

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '1.8'  # You can specify your desired Java version here
        distribution: 'temurin' #other option distribution: 'adopt' ref. https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
        
    - name: Build with Maven
      run: mvn clean install  # Replace with your actual Maven build command

    - name: Run Maven tests
      run: mvn test  # Run Maven tests
      

   
